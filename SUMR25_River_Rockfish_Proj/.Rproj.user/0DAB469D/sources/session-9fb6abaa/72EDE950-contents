---
title: "Gopher_RF_River_v1.5_New-Params"
author: "River Mckegney"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


## Start-Up: Render format, and load necessary library packages
```{r setup, results='hide', warning=FALSE, message=FALSE, error=FALSE}

# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots

```



## Data Entry: read in raw csv data files
```{r}
# Read in data
ABL90 <- read.csv("data-raw/ABL90_Raw.csv")
metadata_atresia_guide <- read.csv("metadata/2024_Atresiafish_Guide2.csv")

```



## Data Manipulation: Filter, removal, and selection
```{r}
# Data sifting: ABL90 dataset

# Step 1: Remove missing info
ABL_set1 <- ABL90 %>%
  filter(Patient.ID_edited != "") 
  

# Step 2: Separate Patient.ID into columns of sample types: blood plasma and instant freeze plasma 
ABL_set2 <- separate(ABL_set1, 'Patient.ID_edited', into = c("Patient.ID_edited", "Sample_Type"), sep = ",")  


# Convert Patient.ID_edited column data to character type
ABL_set2$Patient.ID_edited <- as.character(ABL_set2$Patient.ID_edited) 

ABL_set3 <- ABL_set2
```

```{r}
# Turn NAs to 0 values in errors.detected.during.measurement column

ABL_set3 <- ABL_set3 %>%
mutate(`Errors.detected.during.measurement` = ifelse(is.na(`Errors.detected.during.measurement`), 0, `Errors.detected.during.measurement`))
```

```{r}
# Step 4 & 5: Sussing out specific sample errors  

# Remove insufficient samples
ABL_set4 <- ABL_set3 %>%
  filter(!is.na("Type")) %>%
  filter(!str_detect(Errors.detected.during.measurement, "Insufficient sample"))

# Remove inhomogeneous samples
ABL_set5 <- ABL_set4 %>%
  filter(!is.na("Type")) %>%
  filter(!str_detect(Errors.detected.during.measurement, "Inhomogeneous sample"))

# Step 6: Filter for only blood samples
ABL_b_samp <- ABL_set5 %>%
  filter(Sample_Type == "b")

```



## Merge Datasets:
```{r}
# Rename columns to match: Fish.ID to patient.ID_edited, so join can be done

# Note: "post-partuition" spelling error, correct as "post-parturition" or pregnant
# Rename column and variables: 
metadata_atresia_guide <- metadata_atresia_guide %>%
  mutate(Patient.ID_edited = Fish.ID) %>%
  mutate(Pregnant.or.Atresia = ifelse(Pregnant.or.Atresia == "Post-Partuition", "Post-Parturition", Pregnant.or.Atresia)) %>%
  rename("Treatment" = "Ambient.or.OAH")

ABL_merged <- ABL_b_samp %>%
inner_join(metadata_atresia_guide, by = "Patient.ID_edited") %>%
  filter(!is.na(Date.of.processing)) # Removing individuals not in metadata set
  
```




## Remove Duplicates from dataset
```{r}

# Cross Check all Columns: Cross validation to suss correct replicate row
all_params <- ABL_merged %>%
  select(Patient.ID_edited, Treatment, Last.known.treatment, Pregnant.or.Atresia, pH, Glu..mmol.L., Hct...., Na...mmol.L., K...mmol.L., Cl...mmol.L., Ca....mmol.L., pCO2..mmHg.)



# Method 2: Remove evaluated replicates (see notes below)
select_repl <- all_params %>%
  filter(row_number() != 34, # Patient_ID 9783D remove
         row_number() != 41, # Patient_ID 9783D remove
         row_number() != 39, # Patient_ID 97812 duplicate
         row_number() != 30, # Patient_ID 9782D replicate
         row_number() != 37, # Patient_ID 9782D duplicate
         row_number() != 29) # Patient_ID 9782D duplicate
         
          
glimpse(select_repl) 
# Note: Sodium and Chloride parameters are character values

```



## Note: Reference *Error Codes and Notes* or Other Column Metadata Associated With Each Variable As A Check Method For Duplicate Rows
After Checking ABL_merged dataframe, There are specific **notes** associated with Patient.ID_edited (synonymous with Fish.ID) for individuals 9782D, 9783D, and 97812 (where duplicate rows exist).

Fish.ID 9782D: 4x duplicate rows.
Results for this cross check analysis indicate to **keep 9782D row #38 or #30** (Row # specific for ABL_merged, and this row is associated with Notes data, while duplicates #37 and #29 do not Notes data, as column is left blank), and drop row #37 & 29 replicates. 
Note: Cross check parameter values to decide which row (#38 or #40) for 9782D is the correct replicate row.
Evaluation: **Parameter values** between replicate rows #38 and #30 are **quite similar**, and deciding which contains the more accurate measurements is not clear. Row #38 contains slightly increased parameter values (except for calcium, which displays a slight decrease) compared to row #30.

9782D Update: Checking Error codes, row #30 contains Error.code.29: "(1227) - correction for bicarbonate contains errors for pH, pCO2".
**choose row #38 to keep, remove rows #30, 37, and #29**. 

Fish.ID 97812: 2x duplicate rows (which is correct?)
For patient **97812 keep row #40** (contains notes data) and drop row #39; as notes conclude treatment is Ambient, and pregnant.or.Atresia is Post-Parturition. 
Note: Check associated parameter values to make sure this looks right.
 

Fish.ID 9783D: 2x duplicate rows
For **patient 9783D, rows #41 & #34 consider dropping all rows** (removing sample). Notes exist for both rows, and notes say results may not be accurate.  



# Convert variables to correct datatype:
```{r}
# Select replicate assigning datatype

select_repl <- select_repl %>%
  mutate(across(5:11, as.double))

glimpse(select_repl)
```



# Save filtered dataset into data-worked folder
```{r}
# Save merged dataset in a worked folder

write.csv(x = select_repl, file = "data-worked/select_repl")
```




## Sample Size: n
```{r}
sample_size_table <- select_repl %>%
  group_by(Treatment, Pregnant.or.Atresia) %>%
  summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(sample_size_table)

 pdf("data-images/sample_size_table.pdf") 
 grid.table(sample_size_table)
 dev.off()

 png("data-images/sample_size_table.png")
 grid.table(sample_size_table)
 dev.off()
```



## Visualizations - Graphs:
Intro: Treatment & Pregnancy Outcome Exp. Overview
```{r}
# View Sample Distributions

sample_size_barplot2 <- select_repl %>%
  group_by(Pregnant.or.Atresia, Last.known.treatment) %>% 
  summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
  ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
  geom_bar(stat = "identity" ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
  facet_grid(~ Last.known.treatment) +
  labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
        x = "Parturition Outcome",
        y = "Sample Size (n)") +
  guides(fill = guide_legend((title = "Treatment Type"))) +
  theme_classic(base_size = 10)

print(sample_size_barplot2)

ggsave(filename = "data-images/sample_size_barplot2.png", plot = sample_size_barplot2, device = "png")
ggsave(filename = "data-images/sample_size_barplot2.pdf", plot = sample_size_barplot2, device = "pdf")


# Figured it out here
sample_size_barplot <- select_repl %>%
  group_by(Pregnant.or.Atresia, Treatment) %>% 
  summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
  ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
  geom_bar(stat = "identity" ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
  facet_grid(~ Treatment) +
  labs(title = "Sample Size Of Experimental Groups For Female Gopher Rockfish",
        x = "Parturition Status & Treatment Type",
        y = "Sample Size (n)") +
  guides(fill = guide_legend((title = "Reproductive State"))) +
  theme_classic(base_size = 10)

print(sample_size_barplot)

ggsave(filename = "data-images/sample_size_barplot.png", plot = sample_size_barplot, device = "png")
ggsave(filename = "data-images/sample_size_barplot.pdf", plot = sample_size_barplot, device = "pdf")

```


Important Note: QQplot changes based on AOV interaction model compared to Additive model

# pH
```{r}
# pH boxplot
pH_boxplot <- ggplot(data = select_repl) +
  geom_boxplot(aes(x = Pregnant.or.Atresia, y = pH, fill = Treatment)) +
  labs(title = "pH", x = "Reproduction Status", y = "pH") +
  guides(color = guide_legend((title = "Treatment Type"))) + 
  theme_classic() +
  theme(panel.background = element_rect(fill = "white"),
        plot.background = element_rect(fill = "white"),
        legend.background = element_rect(fill = "white", color = "black"),
        title = element_text(size = 12),
        plot.title = element_text(size = 30, hjust = 0.5),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20))

print(pH_boxplot)

ggsave(filename = "data-images/pH_boxplot.pdf", plot = pH_boxplot, device = "pdf")
ggsave(filename = "data-images/pH_boxplot.png", plot = pH_boxplot, device = "png")

# ANOVA Test
pH_aov <- aov(pH ~ Pregnant.or.Atresia * Treatment, data = select_repl)
summary(pH_aov)

# No-interaction model:
pH_aov_no_int <- aov(pH ~ Pregnant.or.Atresia + Treatment,
              data = select_repl)
summary(pH_aov_no_int)

# Parametric Assumption Tests

# Visualizations to check for normality


pH_res_qqplot <- ggqqplot(residuals(pH_aov)) + 
labs(title = "pH Residual QQplot",
     subtitle = "aov(pH ~ Parturition Status * Treatment)",
                               x = "pH Theoretical Quantiles (Predicted values)",
                               y = "pH Sample Quantiles") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
print(pH_res_qqplot)

ggsave(filename = "data-images/pH_res_qqplot.pdf", plot = pH_res_qqplot, device = "pdf")
ggsave(filename = "data-images/pH_res_qqplot.png", plot = pH_res_qqplot, device = "png")


# Test normality 
shapiro.test(residuals(pH_aov)) 

# Homoscedasticity (equal variance or homogeneity of variance)
leveneTest(pH ~ Pregnant.or.Atresia * Treatment, data = select_repl)

# Tukey Test: which group has higher or lower values?
TukeyHSD(pH_aov, which = "Pregnant.or.Atresia")
TukeyHSD(pH_aov, which = "Treatment")

TukeyHSD(pH_aov_no_int)

```

## pH Interpretation of ANOVA results: 
Regarding two-way ANOVA without interaction present, results show **significant difference** in pH with respect to parturition status (pregnant or atresia) [Pr(>F) = 0.00147], treatments (ambient or OAH) [Pr(>F) = 0.01659].

These results indicate **Atresia patients display significantly lower pH** and **OAH treatments result in significantly lower pH**.

## pH Parametric Assumptions:
1). Independent Samples: 
Samples collected independently, normality assumption met.

2). Data distribution normality:
Shapiro-Wilk normality test results express **a normal distribution** of the residuals (W = 0.95426, p-value = 0.1531). 

3). Homoscedasticity or Equal Variance:
Levene's test results indicate **residual variance is homogeneous** (Pr(>F) = 0.3806) throughout the samples of the dataset.



# Glucose
```{r}
# Glucose boxplot
glucose_boxplot <- ggplot(data = select_repl) +
  geom_boxplot(aes(x = Pregnant.or.Atresia, y = Glu..mmol.L., fill = Treatment)) + 
  labs(title = "Glucose", x = "Reproduction Status", y = "Glucose (mmol/L)") +
  guides(color = guide_legend((title = "Treatment Type"))) + 
  theme_classic() +
  theme(panel.background = element_rect(fill = "white"),
        plot.background = element_rect(fill = "white"),
        legend.background = element_rect(fill = "white", color = "black"),
        title = element_text(size = 12),
        plot.title = element_text(size = 30, hjust = 0.5),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20))

print(glucose_boxplot)

ggsave(filename = "data-images/glucose_boxplot.pdf", plot = glucose_boxplot, device = "pdf")
ggsave(filename = "data-images/glucose_boxplot.png", plot = glucose_boxplot, device = "png")

# Glucose Two-way ANOVA test
glucose_aov <- aov(Glu..mmol.L. ~ Pregnant.or.Atresia * Treatment, data = select_repl)
summary(glucose_aov) # interaction not significant, change model

# Additive Model
glucose_aov_no_int <- aov(Glu..mmol.L. ~ Pregnant.or.Atresia + Treatment, data = select_repl)
summary(glucose_aov_no_int)

# Parametric Assumptions

# Check normality plots

glucose_res_qqplot <- ggqqplot(residuals(glucose_aov_no_int)) + 
labs(title = "Glucose Residual QQplot",
     subtitle = "aov(Glu..mmol.L. ~ Parturition Status + Treatment)",
                               x = "Glucose (mmol/L) Theoretical Quantiles (Predicted values)",
                               y = "Glucose (mmol/L) Sample Quantiles") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
print(glucose_res_qqplot)

ggsave(filename = "data-images/glucose_res_qqplot.pdf", plot = glucose_res_qqplot, device = "pdf")
ggsave(filename = "data-images/glucose_res_qqplot.png", plot = glucose_res_qqplot, device = "png")


# Check normality shapiro.test
shapiro.test(residuals(glucose_aov_no_int))

# Check homscedasticity
leveneTest(Glu..mmol.L. ~ Pregnant.or.Atresia * Treatment,
              data = select_repl)

# Tukey Test: which group has higher or lower values?
TukeyHSD(glucose_aov_no_int)
```

## Glucose ANOVA results:
Two-way ANOVA without interaction results suggest there are **no significant differences** in glucose concentration between parturition status (Pr(>F) = 0.154) and treatment types (Pr(>F) = 0.400).

Note: Multiple outliers appear to exist here in the aov models residual upper quartile values.

## Glucose Parametric Assumptions:
1). Independent Samples: 
Samples collected independently, normality assumption met.

2). Data distribution normality:
Shapiro-Wilk normality test results indicate the data sample **residuals are not normally distributed** (W = 0.83506, p-value = 0.0001076).

3). Homoscedasticity or Equal Variance:
Levene's test results indicate the data's **residual variance is homogeneous (similar throughout)** (Pr(>F) = 0.6013).



# Hematocrit: RBC concentrations
```{r}
# Hematocrit boxplot
hematocrit_boxplot <- ggplot(data = select_repl) +
  geom_boxplot(aes(x = Pregnant.or.Atresia, y = Hct...., 
                   fill = Treatment)) + 
  labs(title = "Hematocrit") +
  xlab(label = "Reproduction Status") +
  ylab(label = "Hematocrit %") +
  guides(color = guide_legend((title = "Treatment Type"))) + 
  theme_classic() +
  theme(panel.background = element_rect(fill = "white"),
        plot.background = element_rect(fill = "white"),
        legend.background = element_rect(fill = "white", color = "black"),
        plot.title = element_text(size = 30, hjust = 0.5),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20))

print(hematocrit_boxplot)

ggsave(filename = "data-images/hematocrit_boxplot.pdf", plot = hematocrit_boxplot, device = "pdf")
ggsave(filename = "data-images/hematocrit_boxplot.png", plot = hematocrit_boxplot, device = "png")

# Hematocrit two-way ANOVA test
hem_aov <- aov(Hct.... ~ Pregnant.or.Atresia * Treatment, data = select_repl)
summary(hem_aov) # interaction not significant

# Additive model
hem_aov_no_int <- aov(Hct.... ~ Pregnant.or.Atresia + Treatment, data = select_repl)
summary(hem_aov_no_int)

# Parametric assumptions
# Hematocrit normality plot
#plot(hem_aov_no_int, which = c(1,2,5)) 

hem_res_qqplot <- ggqqplot(residuals(hem_aov_no_int)) + 
labs(title = "Hematocrit Residual QQplot",
     subtitle = "aov(Hematocrit ~ Parturition Status + Treatment)",
                               x = "Hematocrit Theoretical Quantiles (Predicted values)",
                               y = "Hematocrit Sample Quantiles") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
print(hem_res_qqplot)

ggsave(filename = "data-images/hem_res_qqplot.pdf", plot = hem_res_qqplot, device = "pdf")
ggsave(filename = "data-images/hem_res_qqplot.png", plot = hem_res_qqplot, device = "png")

# Hematocrit normality shapiro.test
shapiro.test(residuals(hem_aov_no_int))

# Hematocrit homoscedasticity of variance
leveneTest(Hct.... ~ Pregnant.or.Atresia * Treatment,
              data = select_repl)

# Tukey Test: which group has higher or lower values?
TukeyHSD(hem_aov_no_int)
```

## Hematocrit two-way ANOVA results:
The two-way ANOVA test without an interaction yielded **significant differences** in hematocrit concentrations between parturition status groups (Pr(>F) = 0.00545), and *no significant differences* in hematocrit between treatment levels (Pr(>F) = 0.09565).

These results indicate **Atresia patients have significant increase in hematocrit**, and **OAH treatment caused no significant difference in hematocrit compared to the ambient treatment**.

## Hematocrit parametric assumptions:
1). Independent Samples: 
Samples collected independently, normality assumption met.

2). Data Distribution Normality:
The Shapiro-Wilk normality test results indicate the data's **residuals are normally distributed** (W = 0.98055, p-value = 0.777).

3). Homoscedasticity or Equal Variance:
The Levene's Test for homogeneity of variance indicate dample **residuals are homogeneous** throguhout the dataset (Pr(>F) = 0.4073). 



# Build ANOVA Table:
```{r}
# ANOVA table

ANOVA_tab <- data_frame(`Parameter` = c("pH", "glucose", "hematocrit"),
                        `ANOVA Model` = c("Interaction", "Additive", "Additive"),
                        `Significance` = c("significant", "not significant", "significant"),
                        `Interaction Pr(>F)` = c("0.07312", "NA", "NA"), 
                        `Partuition Status Pr(>F)` = c("0.00106**", "0.154", "0.00545**"),
                        `Treatment Pr(>F)` = c("0.01339*", "0.400", "0.09565"),
                        `Normality p-value` = c("0.1531", "0.0001076", "0.777"),
                        `Variance Pr(>F)` = c("0.3806", "0.6013", "0.4073"))

print(ANOVA_tab)

set_flextable_defaults(background.color = "white")

ANOVA_tab <- flextable(ANOVA_tab)

ANOVA_tab
 
save_as_image(ANOVA_tab, path = "data-images/ANOVA_tab.png")

```